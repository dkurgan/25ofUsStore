{"ast":null,"code":"import hoodieOne from '../images/hoodie_1.jpeg';\nimport hoodieTwo from '../images/hoodie_2.jpeg';\nimport pantsOne from '../images/pants_1.jpeg';\nconst initState = {\n  items: [{\n    id: 1,\n    title: \"Black hoodie\",\n    desc: \"Top hoodie for everyone\",\n    price: 3200,\n    img: hoodieOne\n  }, {\n    id: 2,\n    title: \"White hoodie\",\n    desc: \"Top hoodie for everyone\",\n    price: 3200,\n    img: hoodieTwo\n  }, {\n    id: 3,\n    title: \"Black pants\",\n    desc: \"Top pants for everyone\",\n    price: 2400,\n    img: pantsOne\n  }, {\n    id: 4,\n    title: \"White pants\",\n    desc: \"Top pants for everyone\",\n    price: 2400,\n    img: pantsOne\n  }],\n  addedItems: [],\n  total: null\n};\n\nconst cartReducer = (state = initState, action) => {\n  if (action.type === 'ITEM_SELECTED') {\n    let addedItem = state.items.find(item => item.id === action.id); //Check if item already in cart\n\n    let itemInCart = state.addedItems.find(item => action.id === item.id);\n\n    if (itemInCart) {\n      addedItem.quantity += 1;\n      return { ...state,\n        total: state.total + addedItem.price\n      };\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      const newTotal = state.total + addedItem.price;\n      return { ...state,\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/danila/Documents/Web_Development/UliaShop/client/src/reducers/index.js"],"names":["hoodieOne","hoodieTwo","pantsOne","initState","items","id","title","desc","price","img","addedItems","total","cartReducer","state","action","type","addedItem","find","item","itemInCart","quantity","newTotal"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAGA,MAAMC,SAAS,GAAE;AACbC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,cAAf;AAA+BC,IAAAA,IAAI,EAAE,yBAArC;AAAgEC,IAAAA,KAAK,EAAE,IAAvE;AAA6EC,IAAAA,GAAG,EAAET;AAAlF,GADG,EAEH;AAACK,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,cAAf;AAA+BC,IAAAA,IAAI,EAAE,yBAArC;AAAgEC,IAAAA,KAAK,EAAE,IAAvE;AAA6EC,IAAAA,GAAG,EAAER;AAAlF,GAFG,EAGH;AAACI,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,aAAf;AAA8BC,IAAAA,IAAI,EAAE,wBAApC;AAA8DC,IAAAA,KAAK,EAAE,IAArE;AAA2EC,IAAAA,GAAG,EAAEP;AAAhF,GAHG,EAIH;AAACG,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,aAAf;AAA8BC,IAAAA,IAAI,EAAE,wBAApC;AAA8DC,IAAAA,KAAK,EAAE,IAArE;AAA2EC,IAAAA,GAAG,EAAEP;AAAhF,GAJG,CADM;AAObQ,EAAAA,UAAU,EAAE,EAPC;AAQbC,EAAAA,KAAK,EAAE;AARM,CAAjB;;AAWA,MAAMC,WAAW,GAAE,CAACC,KAAK,GAAGV,SAAT,EAAmBW,MAAnB,KAA4B;AAE3C,MAAGA,MAAM,CAACC,IAAP,KAAgB,eAAnB,EAAmC;AAC7B,QAAIC,SAAS,GAAGH,KAAK,CAACT,KAAN,CAAYa,IAAZ,CAAiBC,IAAI,IAAGA,IAAI,CAACb,EAAL,KAAYS,MAAM,CAACT,EAA3C,CAAhB,CAD6B,CAG7B;;AAED,QAAIc,UAAU,GAAGN,KAAK,CAACH,UAAN,CAAiBO,IAAjB,CAAsBC,IAAI,IAAGJ,MAAM,CAACT,EAAP,KAAca,IAAI,CAACb,EAAhD,CAAjB;;AACA,QAAGc,UAAH,EAAc;AACXH,MAAAA,SAAS,CAACI,QAAV,IAAsB,CAAtB;AACC,aAAM,EAAE,GAAGP,KAAL;AAAYF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcK,SAAS,CAACR;AAA3C,OAAN;AACJ,KAHA,MAII;AACDQ,MAAAA,SAAS,CAACI,QAAV,GAAqB,CAArB,CADC,CAED;;AACA,YAAMC,QAAQ,GAAGR,KAAK,CAACF,KAAN,GAAcK,SAAS,CAACR,KAAzC;AACA,aAAO,EACH,GAAGK,KADA;AAEHH,QAAAA,UAAU,EAAE,CAAC,GAAGG,KAAK,CAACH,UAAV,EAAsBM,SAAtB,CAFT;AAGHL,QAAAA,KAAK,EAAEU;AAHJ,OAAP;AAKH;AACJ;;AACG,SAAOR,KAAP;AACL,CAxBH;;AA0BE,eAAeD,WAAf","sourcesContent":["import hoodieOne from '../images/hoodie_1.jpeg';\nimport hoodieTwo from '../images/hoodie_2.jpeg';\nimport pantsOne from '../images/pants_1.jpeg';\n\n\nconst initState= {\n    items: [\n        {id: 1, title: \"Black hoodie\", desc: \"Top hoodie for everyone\", price: 3200, img: hoodieOne},\n        {id: 2, title: \"White hoodie\", desc: \"Top hoodie for everyone\", price: 3200, img: hoodieTwo},\n        {id: 3, title: \"Black pants\", desc: \"Top pants for everyone\", price: 2400, img: pantsOne},\n        {id: 4, title: \"White pants\", desc: \"Top pants for everyone\", price: 2400, img: pantsOne},\n    ],\n    addedItems: [],\n    total: null\n}\n\nconst cartReducer= (state = initState,action)=>{\n   \n    if(action.type === 'ITEM_SELECTED'){\n          let addedItem = state.items.find(item=> item.id === action.id)\n\n          //Check if item already in cart\n\n         let itemInCart = state.addedItems.find(item=> action.id === item.id)\n         if(itemInCart){\n            addedItem.quantity += 1 \n             return{ ...state, total: state.total + addedItem.price }\n        }\n         else{\n            addedItem.quantity = 1;\n            //calculating the total\n            const newTotal = state.total + addedItem.price\n            return { \n                ...state, \n                addedItems: [...state.addedItems, addedItem], \n                total: newTotal\n            }\n        }\n    }\n        return state;\n  }\n\n  export default cartReducer"]},"metadata":{},"sourceType":"module"}